<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zak Kriner's Blog</title>
    <description>Home</description>
    <link></link>
    <atom:link href="/blog/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Using WordNet with Clojure</title>
        <description>
          
          Clojure’s interop provides
direct access to Java and its many libraries. This post will walk
through using the Extended Java WordNet Library (extJWNL) to query
WordNet.

extJWNL’s getting started section
shows dependencies in a
pom.xml used by 
Maven:

&amp;lt;!-- main library dependency --&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;net.sf.extjwnl&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;extjwnl&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;2.0.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;!-- Princeton WordNet 3.1 data dependency --&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;net.sf.extjwnl&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;extjwnl-data-wn31&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;


Clojure projects can also use Maven dependencies if you translate the
XML into something its tooling understands.

The same dependencies using
deps.edn:

{:deps
 {net.sf.extjwnl/extjwnl           {:mvn/version &quot;2.0.2&quot;}
  net.sf.extjwnl/extjwnl-data-wn31 {:mvn/version &quot;1.2&quot;}}}


In the same directory as your deps.edn,
start a clj REPL
– which also downloads dependencies if necessary:

$ clj
# Downloading: ...
Clojure 1.10.0
user=&amp;gt;


extJWNL’s
examples
make Dictionary seem like a good place to start. In the REPL:

user=&amp;gt; (import 'net.sf.extjwnl.dictionary.Dictionary)
;;=&amp;gt; net.sf.extjwnl.dictionary.Dictionary

user=&amp;gt; (def dict (Dictionary/getDefaultResourceInstance))
SLF4J: Failed to load class &quot;org.slf4j.impl.StaticLoggerBinder&quot;.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
;;=&amp;gt; #'user/dict


extJWNL uses SLF4J for logging and it wasn’t
included in the dependencies. To disable the warning add slf4j-nop to
your deps.edn:

{:deps
 {net.sf.extjwnl/extjwnl           {:mvn/version &quot;2.0.2&quot;}
  net.sf.extjwnl/extjwnl-data-wn31 {:mvn/version &quot;1.2&quot;}
  ; no-operation logger
  org.slf4j/slf4j-nop              {:mvn/version &quot;1.7.25&quot;}}}


Try again:

$ clj
Clojure 1.10.0
user=&amp;gt; (import 'net.sf.extjwnl.dictionary.Dictionary)
;;=&amp;gt; net.sf.extjwnl.dictionary.Dictionary

user=&amp;gt; (def dict (Dictionary/getDefaultResourceInstance))
;;=&amp;gt; #'user/dict


That’s better.

Following along in the
Java API documentation you can
see Dictionary methods:

user=&amp;gt; (.lookupAllIndexWords dict &quot;rabbit&quot;)
;;=&amp;gt; ... &quot;[IndexWordSet: [IndexWord: [Lemma: rabbit] [POS: noun]][IndexWord: [Lemma: rabbit] [POS: verb]]]&quot;


IndexWordSet? The API documentation shows getIndexWordCollection
gives a Collection that works with Clojure’s map, filter, etc.

user=&amp;gt; (.getIndexWordCollection
        (.lookupAllIndexWords dict &quot;rabbit&quot;))
;;=&amp;gt; ... &quot;[[IndexWord: [Lemma: rabbit] [POS: noun]], [IndexWord: [Lemma: rabbit] [POS: verb]]]&quot;


Thread the words
into map and get the part of speech:

user=&amp;gt; (-&amp;gt;&amp;gt; (.lookupAllIndexWords dict &quot;rabbit&quot;)
            (.getIndexWordCollection)
            (map #(.getPOS %)))
;;=&amp;gt; (... &quot;[POS: noun]&quot;] ... &quot;[POS: verb]&quot;])


Perhaps there’s an interesting way to use rabbit as a verb? If you only
want one part of speech for a word you can use lookupIndexWord:

user=&amp;gt; (import 'net.sf.extjwnl.data.POS)
;;=&amp;gt; net.sf.extjwnl.data.POS

user=&amp;gt; (-&amp;gt;&amp;gt; (.getSenses
                (.lookupIndexWord dict                                                         
                                    POS/VERB
                                    &quot;rabbit&quot;))                                                   
            (map #(.getGloss %)))
;;=&amp;gt; (&quot;hunt rabbits&quot;)


Oh.

From here, hopefully you’ll be comfortable reading
extJWNL’s documentation
directly. Who needs
wrapper libraries anyway?

        </description>
        <pubDate>Wed, 30 Jan 2019 00:00:00 -0500</pubDate>
        <link>/blog/2019-using-wordnet-with-clojure/</link>
        <guid isPermaLink="true">/blog/2019-using-wordnet-with-clojure/</guid>
      </item>
    
  </channel>
</rss>
